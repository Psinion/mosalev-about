networks:
  mos-network:
    driver: bridge

services:
  mos.db:
    container_name: mos-db
    image: postgres:16.4-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    expose:
      - "5431:5432"
    networks:
      - mos-network
    volumes:
      - mos-db-data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    
  mos.backend:
    container_name: mos-backend
    restart: unless-stopped
    build:
      context: ./MOSBackend
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production #Development
      - ASPNETCORE_HTTP_PORTS=8080
      #- ASPNETCORE_HTTPS_PORTS=8081
    expose:
      - "8080:8080"
    networks:
      - mos-network
    depends_on: 
      - mos.db
  
  mos.frontend:
    container_name: mos-frontend
    restart: unless-stopped
    build:
      context:  ./MOSFrontend
      dockerfile: Dockerfile
    expose:
      - "6981:80"
    networks:
      - mos-network
    depends_on: 
      - mos.backend

  mos.proxy:
    container_name: mos-proxy
    image: nginx:1.27.2-alpine
    restart: always
    build:
      context: ./Proxy
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - cert-volume:/etc/letsencrypt/:ro
      - cert-www:/var/www/certbot:ro
    networks:
      - mos-network
    depends_on:
      - mos.frontend
      
  certbot:
    image: certbot/certbot:latest
    volumes:
      - cert-volume:/etc/letsencrypt
      - cert-www:/var/www/certbot
    networks:
      - mos-network
    entrypoint: |
      sh -c 'echo "0 0 1 * * certbot renew --quiet" >> /etc/crontabs/root &&
             crond -f &
             trap "exit 0" SIGINT SIGTERM;
             if [ ! -f /etc/letsencrypt/live/mosalev.su/fullchain.pem ]; then
               certbot certonly --non-interactive --agree-tos --email mosalev.daniel@gmail.com \
               --webroot -w /var/www/certbot \
               -d mosalev.su -d api.mosalev.su \
               --staging;
             fi;
             wait'
    depends_on:
      - mos.proxy
    restart: unless-stopped

volumes:
  mos-db-data:
  cert-volume: {}
  cert-www: {}

